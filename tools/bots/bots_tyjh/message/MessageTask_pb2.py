# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: MessageTask.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='MessageTask.proto',
  package='Message',
  serialized_pb=_b('\n\x11MessageTask.proto\x12\x07Message\"N\n\x07MsgTask\x12\x13\n\x0btotal_count\x18\x01 \x02(\x05\x12\x0b\n\x03tid\x18\x02 \x02(\x05\x12\x11\n\tcur_count\x18\x03 \x02(\x05\x12\x0e\n\x06status\x18\x04 \x02(\x05\"B\n\x0bS2CTaskList\x12\"\n\x08tasklist\x18\x01 \x03(\x0b\x32\x10.Message.MsgTask\x12\x0f\n\x07newtask\x18\x02 \x01(\x05\"\x1f\n\rC2STaskAccept\x12\x0e\n\x06taskid\x18\x01 \x02(\x05\"\x1f\n\rC2STaskFinish\x12\x0e\n\x06taskid\x18\x01 \x02(\x05\"\x1e\n\x0c\x43\x32STaskFight\x12\x0e\n\x06taskid\x18\x01 \x02(\x05\"\x1e\n\x10\x43\x32STaskSyncStory\x12\n\n\x02id\x18\x01 \x02(\x05\"\x1e\n\x10S2CTaskSyncStory\x12\n\n\x02id\x18\x01 \x02(\x05*\xdf\x01\n\x0eTaskClientType\x12\x14\n\x10TASK_CLIENT_MAIN\x10\x00\x12\x16\n\x12TASK_CLIENT_MASTER\x10\x01\x12\x14\n\x10TASK_CLIENT_LOOP\x10\x02\x12\x15\n\x11TASK_CLIENT_GUILD\x10\x03\x12\x18\n\x14TASK_CLIENT_VOCATION\x10\x04\x12\x15\n\x11TASK_CLIENT_EVENT\x10\x05\x12\x16\n\x12TASK_CLIENT_BRANCH\x10\x06\x12\x14\n\x10TASK_CLIENT_RAID\x10\x07\x12\x13\n\x0fTASK_CLIENT_OLD\x10\x08*2\n\x0bTaskGetType\x12\x10\n\x0cTASK_GET_NPC\x10\x01\x12\x11\n\rTASK_GET_PROP\x10\x02*k\n\rTaskLimitType\x12\x12\n\x0eTASK_LIMIT_NOT\x10\x00\x12\x13\n\x0fTASK_LIMIT_ONCE\x10\x01\x12\x17\n\x13TASK_LIMIT_EVERYDAY\x10\x02\x12\x18\n\x14TASK_LIMIT_EVERYWEEK\x10\x03*g\n\x0eTaskFinishType\x12\x14\n\x10TASK_FINISH_TALK\x10\x01\x12\x17\n\x13TASK_FINISH_MONSTER\x10\x02\x12\x14\n\x10TASK_FINISH_PROP\x10\x03\x12\x10\n\x0cTASK_LEVELUP\x10\x04*\x94\x01\n\rTaskAwardType\x12\x12\n\x0eTASK_AWARD_EXP\x10\x01\x12\x15\n\x11TASK_AWARD_COPPER\x10\x02\x12\x15\n\x11TASK_AWARD_SILVER\x10\x03\x12\x13\n\x0fTASK_AWARD_GOLD\x10\x04\x12\x13\n\x0fTASK_AWARD_PROP\x10\x05\x12\x17\n\x13TASK_AWARD_VOCATION\x10\x06')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_TASKCLIENTTYPE = _descriptor.EnumDescriptor(
  name='TaskClientType',
  full_name='Message.TaskClientType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_MAIN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_MASTER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_LOOP', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_GUILD', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_VOCATION', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_EVENT', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_BRANCH', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_RAID', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_CLIENT_OLD', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=341,
  serialized_end=564,
)
_sym_db.RegisterEnumDescriptor(_TASKCLIENTTYPE)

TaskClientType = enum_type_wrapper.EnumTypeWrapper(_TASKCLIENTTYPE)
_TASKGETTYPE = _descriptor.EnumDescriptor(
  name='TaskGetType',
  full_name='Message.TaskGetType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TASK_GET_NPC', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_GET_PROP', index=1, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=566,
  serialized_end=616,
)
_sym_db.RegisterEnumDescriptor(_TASKGETTYPE)

TaskGetType = enum_type_wrapper.EnumTypeWrapper(_TASKGETTYPE)
_TASKLIMITTYPE = _descriptor.EnumDescriptor(
  name='TaskLimitType',
  full_name='Message.TaskLimitType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TASK_LIMIT_NOT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_LIMIT_ONCE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_LIMIT_EVERYDAY', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_LIMIT_EVERYWEEK', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=618,
  serialized_end=725,
)
_sym_db.RegisterEnumDescriptor(_TASKLIMITTYPE)

TaskLimitType = enum_type_wrapper.EnumTypeWrapper(_TASKLIMITTYPE)
_TASKFINISHTYPE = _descriptor.EnumDescriptor(
  name='TaskFinishType',
  full_name='Message.TaskFinishType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TASK_FINISH_TALK', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_FINISH_MONSTER', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_FINISH_PROP', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_LEVELUP', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=727,
  serialized_end=830,
)
_sym_db.RegisterEnumDescriptor(_TASKFINISHTYPE)

TaskFinishType = enum_type_wrapper.EnumTypeWrapper(_TASKFINISHTYPE)
_TASKAWARDTYPE = _descriptor.EnumDescriptor(
  name='TaskAwardType',
  full_name='Message.TaskAwardType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TASK_AWARD_EXP', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_AWARD_COPPER', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_AWARD_SILVER', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_AWARD_GOLD', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_AWARD_PROP', index=4, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TASK_AWARD_VOCATION', index=5, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=833,
  serialized_end=981,
)
_sym_db.RegisterEnumDescriptor(_TASKAWARDTYPE)

TaskAwardType = enum_type_wrapper.EnumTypeWrapper(_TASKAWARDTYPE)
TASK_CLIENT_MAIN = 0
TASK_CLIENT_MASTER = 1
TASK_CLIENT_LOOP = 2
TASK_CLIENT_GUILD = 3
TASK_CLIENT_VOCATION = 4
TASK_CLIENT_EVENT = 5
TASK_CLIENT_BRANCH = 6
TASK_CLIENT_RAID = 7
TASK_CLIENT_OLD = 8
TASK_GET_NPC = 1
TASK_GET_PROP = 2
TASK_LIMIT_NOT = 0
TASK_LIMIT_ONCE = 1
TASK_LIMIT_EVERYDAY = 2
TASK_LIMIT_EVERYWEEK = 3
TASK_FINISH_TALK = 1
TASK_FINISH_MONSTER = 2
TASK_FINISH_PROP = 3
TASK_LEVELUP = 4
TASK_AWARD_EXP = 1
TASK_AWARD_COPPER = 2
TASK_AWARD_SILVER = 3
TASK_AWARD_GOLD = 4
TASK_AWARD_PROP = 5
TASK_AWARD_VOCATION = 6



_MSGTASK = _descriptor.Descriptor(
  name='MsgTask',
  full_name='Message.MsgTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='total_count', full_name='Message.MsgTask.total_count', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tid', full_name='Message.MsgTask.tid', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cur_count', full_name='Message.MsgTask.cur_count', index=2,
      number=3, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='Message.MsgTask.status', index=3,
      number=4, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=108,
)


_S2CTASKLIST = _descriptor.Descriptor(
  name='S2CTaskList',
  full_name='Message.S2CTaskList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tasklist', full_name='Message.S2CTaskList.tasklist', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='newtask', full_name='Message.S2CTaskList.newtask', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=176,
)


_C2STASKACCEPT = _descriptor.Descriptor(
  name='C2STaskAccept',
  full_name='Message.C2STaskAccept',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='taskid', full_name='Message.C2STaskAccept.taskid', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=178,
  serialized_end=209,
)


_C2STASKFINISH = _descriptor.Descriptor(
  name='C2STaskFinish',
  full_name='Message.C2STaskFinish',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='taskid', full_name='Message.C2STaskFinish.taskid', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=211,
  serialized_end=242,
)


_C2STASKFIGHT = _descriptor.Descriptor(
  name='C2STaskFight',
  full_name='Message.C2STaskFight',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='taskid', full_name='Message.C2STaskFight.taskid', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=274,
)


_C2STASKSYNCSTORY = _descriptor.Descriptor(
  name='C2STaskSyncStory',
  full_name='Message.C2STaskSyncStory',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Message.C2STaskSyncStory.id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=276,
  serialized_end=306,
)


_S2CTASKSYNCSTORY = _descriptor.Descriptor(
  name='S2CTaskSyncStory',
  full_name='Message.S2CTaskSyncStory',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Message.S2CTaskSyncStory.id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=308,
  serialized_end=338,
)

_S2CTASKLIST.fields_by_name['tasklist'].message_type = _MSGTASK
DESCRIPTOR.message_types_by_name['MsgTask'] = _MSGTASK
DESCRIPTOR.message_types_by_name['S2CTaskList'] = _S2CTASKLIST
DESCRIPTOR.message_types_by_name['C2STaskAccept'] = _C2STASKACCEPT
DESCRIPTOR.message_types_by_name['C2STaskFinish'] = _C2STASKFINISH
DESCRIPTOR.message_types_by_name['C2STaskFight'] = _C2STASKFIGHT
DESCRIPTOR.message_types_by_name['C2STaskSyncStory'] = _C2STASKSYNCSTORY
DESCRIPTOR.message_types_by_name['S2CTaskSyncStory'] = _S2CTASKSYNCSTORY
DESCRIPTOR.enum_types_by_name['TaskClientType'] = _TASKCLIENTTYPE
DESCRIPTOR.enum_types_by_name['TaskGetType'] = _TASKGETTYPE
DESCRIPTOR.enum_types_by_name['TaskLimitType'] = _TASKLIMITTYPE
DESCRIPTOR.enum_types_by_name['TaskFinishType'] = _TASKFINISHTYPE
DESCRIPTOR.enum_types_by_name['TaskAwardType'] = _TASKAWARDTYPE

MsgTask = _reflection.GeneratedProtocolMessageType('MsgTask', (_message.Message,), dict(
  DESCRIPTOR = _MSGTASK,
  __module__ = 'MessageTask_pb2'
  # @@protoc_insertion_point(class_scope:Message.MsgTask)
  ))
_sym_db.RegisterMessage(MsgTask)

S2CTaskList = _reflection.GeneratedProtocolMessageType('S2CTaskList', (_message.Message,), dict(
  DESCRIPTOR = _S2CTASKLIST,
  __module__ = 'MessageTask_pb2'
  # @@protoc_insertion_point(class_scope:Message.S2CTaskList)
  ))
_sym_db.RegisterMessage(S2CTaskList)

C2STaskAccept = _reflection.GeneratedProtocolMessageType('C2STaskAccept', (_message.Message,), dict(
  DESCRIPTOR = _C2STASKACCEPT,
  __module__ = 'MessageTask_pb2'
  # @@protoc_insertion_point(class_scope:Message.C2STaskAccept)
  ))
_sym_db.RegisterMessage(C2STaskAccept)

C2STaskFinish = _reflection.GeneratedProtocolMessageType('C2STaskFinish', (_message.Message,), dict(
  DESCRIPTOR = _C2STASKFINISH,
  __module__ = 'MessageTask_pb2'
  # @@protoc_insertion_point(class_scope:Message.C2STaskFinish)
  ))
_sym_db.RegisterMessage(C2STaskFinish)

C2STaskFight = _reflection.GeneratedProtocolMessageType('C2STaskFight', (_message.Message,), dict(
  DESCRIPTOR = _C2STASKFIGHT,
  __module__ = 'MessageTask_pb2'
  # @@protoc_insertion_point(class_scope:Message.C2STaskFight)
  ))
_sym_db.RegisterMessage(C2STaskFight)

C2STaskSyncStory = _reflection.GeneratedProtocolMessageType('C2STaskSyncStory', (_message.Message,), dict(
  DESCRIPTOR = _C2STASKSYNCSTORY,
  __module__ = 'MessageTask_pb2'
  # @@protoc_insertion_point(class_scope:Message.C2STaskSyncStory)
  ))
_sym_db.RegisterMessage(C2STaskSyncStory)

S2CTaskSyncStory = _reflection.GeneratedProtocolMessageType('S2CTaskSyncStory', (_message.Message,), dict(
  DESCRIPTOR = _S2CTASKSYNCSTORY,
  __module__ = 'MessageTask_pb2'
  # @@protoc_insertion_point(class_scope:Message.S2CTaskSyncStory)
  ))
_sym_db.RegisterMessage(S2CTaskSyncStory)


# @@protoc_insertion_point(module_scope)
